// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NuevaNaturalezaAPI.NET.Models.DB;

#nullable disable

namespace NuevaNaturalezaAPI.NET.Migrations
{
    [DbContext(typeof(NuevaNatuContext))]
    partial class NuevaNatuContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.AccionAct", b =>
                {
                    b.Property<Guid>("IdAccionAct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("IdAccionAct");

                    b.ToTable("AccionAct");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Actuador", b =>
                {
                    b.Property<Guid>("IdActuador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdAccionAct")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdDispositivo")
                        .HasColumnType("uuid");

                    b.Property<string>("Off")
                        .HasColumnType("text");

                    b.Property<string>("On")
                        .HasColumnType("text");

                    b.HasKey("IdActuador");

                    b.HasIndex("IdAccionAct");

                    b.HasIndex("IdDispositivo");

                    b.ToTable("Actuador");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Auditorium", b =>
                {
                    b.Property<Guid>("IdAuditoria")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ActuadorIdActuador")
                        .HasColumnType("uuid");

                    b.Property<int?>("Estado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("IdAccion")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdDispositivo")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.HasKey("IdAuditoria")
                        .HasName("PK__Auditori__7FD13FA0A61CE084");

                    b.HasIndex("ActuadorIdActuador");

                    b.HasIndex("IdAccion");

                    b.HasIndex("IdDispositivo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Auditoria");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Checklist", b =>
                {
                    b.Property<Guid>("IdChecklist")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ObservacionesGenerales")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("IdChecklist");

                    b.ToTable("Checklist", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.ChecklistDetalle", b =>
                {
                    b.Property<Guid>("IdDetalle")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdChecklist")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdDispositivo")
                        .HasColumnType("uuid");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ValorRegistrado")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("IdDetalle");

                    b.HasIndex("IdChecklist");

                    b.HasIndex("IdDispositivo");

                    b.ToTable("ChecklistDetalle", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Dispositivo", b =>
                {
                    b.Property<Guid>("IdDispositivo")
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid?>("IdEstadoDispositivo")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdMarca")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdSistema")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdTipoDispositivo")
                        .HasColumnType("uuid");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("text");

                    b.Property<string>("Sn")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("SN");

                    b.HasKey("IdDispositivo")
                        .HasName("PK__Disposit__B1EDB8E474C7CBCF");

                    b.HasIndex("IdEstadoDispositivo");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdSistema");

                    b.HasIndex("IdTipoDispositivo");

                    b.ToTable("Dispositivo", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.EstadoDispositivo", b =>
                {
                    b.Property<Guid>("IdEstadoDispositivo")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdEstadoDispositivo")
                        .HasName("PK__EstadoDi__838E47E3AA25D2AD");

                    b.ToTable("EstadoDispositivo", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Evento", b =>
                {
                    b.Property<Guid>("IdEvento")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaEvento")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("IdDispositivo")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdImpacto")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdSistema")
                        .HasColumnType("uuid");

                    b.HasKey("IdEvento")
                        .HasName("PK__Evento__034EFC0405B295B9");

                    b.HasIndex("IdDispositivo");

                    b.HasIndex("IdImpacto");

                    b.HasIndex("IdSistema");

                    b.ToTable("Evento", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.FechaMedicion", b =>
                {
                    b.Property<Guid>("IdFechaMedicion")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("IdFechaMedicion")
                        .HasName("PK__FechaMed__8194661818A24598");

                    b.ToTable("FechaMedicion", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Impacto", b =>
                {
                    b.Property<Guid>("IdImpacto")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdImpacto")
                        .HasName("PK__Impacto__5343B38B5C9E169E");

                    b.ToTable("Impacto", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Marca", b =>
                {
                    b.Property<Guid>("IdMarca")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("IdMarca")
                        .HasName("PK__Marca__4076A887D69EBEE8");

                    b.ToTable("Marca", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Medicion", b =>
                {
                    b.Property<Guid>("IdMedicion")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdFechaMedicion")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdSensor")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdTipoMUnidadM")
                        .HasColumnType("uuid");

                    b.Property<double>("Valor")
                        .HasColumnType("double precision");

                    b.HasKey("IdMedicion")
                        .HasName("PK__Medicion__0DAF13BA8526E345");

                    b.HasIndex("IdFechaMedicion");

                    b.HasIndex("IdSensor");

                    b.HasIndex("IdTipoMUnidadM");

                    b.ToTable("Medicion", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Notificacion", b =>
                {
                    b.Property<Guid>("IdNotificacion")
                        .HasColumnType("uuid");

                    b.Property<string>("Enlace")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("IdTipoNotificacion")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdTitulo")
                        .HasColumnType("uuid");

                    b.Property<bool?>("Leido")
                        .HasColumnType("boolean");

                    b.Property<string>("Mensaje")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("IdNotificacion")
                        .HasName("PK__Notifica__F6CA0A85A05D6A01");

                    b.HasIndex("IdTipoNotificacion");

                    b.HasIndex("IdTitulo");

                    b.ToTable("Notificacion", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.PuntoOptimo", b =>
                {
                    b.Property<Guid>("IdPuntoOptimo")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdSensor")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdTipoMUnidadM")
                        .HasColumnType("uuid");

                    b.Property<double>("ValorMax")
                        .HasColumnType("double precision");

                    b.Property<double>("ValorMin")
                        .HasColumnType("double precision");

                    b.HasKey("IdPuntoOptimo")
                        .HasName("PK__PuntoOpt__4DE3AB6EA6EAB830");

                    b.HasIndex("IdSensor");

                    b.HasIndex("IdTipoMUnidadM");

                    b.ToTable("PuntoOptimo", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.RecuperarContrasena", b =>
                {
                    b.Property<Guid>("IdRecuperarContrasena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("IdRecuperarContrasena");

                    b.ToTable("RecuperarContrasena");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Rol", b =>
                {
                    b.Property<Guid>("IdRol")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdRol")
                        .HasName("PK__Rol__2A49584CA78F1000");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Sensor", b =>
                {
                    b.Property<Guid>("IdSensor")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdDispositivo")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdTipoMUnidadM")
                        .HasColumnType("uuid");

                    b.HasKey("IdSensor")
                        .HasName("PK__Sensor__4E7D4A8CAE317C27");

                    b.HasIndex("IdDispositivo");

                    b.HasIndex("IdTipoMUnidadM");

                    b.ToTable("Sensor", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Sistema", b =>
                {
                    b.Property<Guid>("IdSistema")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdSistema")
                        .HasName("PK__Sistema__48B026F42391412D");

                    b.ToTable("Sistema", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Sugerencia", b =>
                {
                    b.Property<Guid>("IdSugerencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Usuario")
                        .HasColumnType("text");

                    b.HasKey("IdSugerencia");

                    b.ToTable("Sugerencias");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.TipoDispositivo", b =>
                {
                    b.Property<Guid>("IdTipoDispositivo")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdTipoDispositivo")
                        .HasName("PK__TipoDisp__A9EEE648DDB96E69");

                    b.ToTable("TipoDispositivo", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.TipoMUnidadM", b =>
                {
                    b.Property<Guid>("IdTipoMUnidadM")
                        .HasColumnType("uuid")
                        .HasColumnName("IdTipoM_UnidadM");

                    b.Property<Guid>("IdTipoMedicion")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdUnidadMedida")
                        .HasColumnType("uuid");

                    b.HasKey("IdTipoMUnidadM")
                        .HasName("PK__TipoM_Un__F93B7E8DADF2DCAB");

                    b.HasIndex("IdTipoMedicion");

                    b.HasIndex("IdUnidadMedida");

                    b.ToTable("TipoM_UnidadM", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.TipoMedicion", b =>
                {
                    b.Property<Guid>("IdTipoMedicion")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("IdTipoMedicion")
                        .HasName("PK__TipoMedi__A6CD50B1C1C59359");

                    b.ToTable("TipoMedicion", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.TipoNotificacion", b =>
                {
                    b.Property<Guid>("IdTipoNotificacion")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdTipoNotificacion")
                        .HasName("PK__TipoNoti__0ECE04358C2BE008");

                    b.ToTable("TipoNotificacion", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Titulo", b =>
                {
                    b.Property<Guid>("IdTitulo")
                        .HasColumnType("uuid");

                    b.Property<string>("Titulo1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Titulo");

                    b.HasKey("IdTitulo")
                        .HasName("PK__Titulo__1E1502D74A588033");

                    b.ToTable("Titulo", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.UnidadMedidum", b =>
                {
                    b.Property<Guid>("IdUnidadMedida")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdUnidadMedida")
                        .HasName("PK__UnidadMe__18F83A93642ECCF9");

                    b.ToTable("UnidadMedida");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("IdRol")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__5B65BF9720640986");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Actuador", b =>
                {
                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.AccionAct", "IdAccionActNavigation")
                        .WithMany("Actuadores")
                        .HasForeignKey("IdAccionAct");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Dispositivo", "IdDispositivoNavigation")
                        .WithMany("Actuadores")
                        .HasForeignKey("IdDispositivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdAccionActNavigation");

                    b.Navigation("IdDispositivoNavigation");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Auditorium", b =>
                {
                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Actuador", null)
                        .WithMany("Auditoria")
                        .HasForeignKey("ActuadorIdActuador");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.AccionAct", "IdAccionNavigation")
                        .WithMany("Auditoria")
                        .HasForeignKey("IdAccion");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Dispositivo", "IdDispositivoNavigation")
                        .WithMany("Auditoria")
                        .HasForeignKey("IdDispositivo")
                        .IsRequired()
                        .HasConstraintName("FK__Auditoria__IdDis__7F2BE32F");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Usuario", "IdUsuarioNavigation")
                        .WithMany("Auditoria")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Auditoria__IdUsu__7E37BEF6");

                    b.Navigation("IdAccionNavigation");

                    b.Navigation("IdDispositivoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.ChecklistDetalle", b =>
                {
                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Checklist", "Checklist")
                        .WithMany("Detalles")
                        .HasForeignKey("IdChecklist")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Dispositivo", "IdDispositivoNavigation")
                        .WithMany("ChecklistDetalles")
                        .HasForeignKey("IdDispositivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Checklist");

                    b.Navigation("IdDispositivoNavigation");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Dispositivo", b =>
                {
                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.EstadoDispositivo", "IdEstadoDispositivoNavigation")
                        .WithMany("Dispositivos")
                        .HasForeignKey("IdEstadoDispositivo");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Marca", "IdMarcaNavigation")
                        .WithMany("Dispositivos")
                        .HasForeignKey("IdMarca")
                        .HasConstraintName("FK__Dispositi__IdMar__534D60F1");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Sistema", "IdSistemaNavigation")
                        .WithMany("Dispositivos")
                        .HasForeignKey("IdSistema")
                        .HasConstraintName("FK__Dispositi__IdSis__52593CB8");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.TipoDispositivo", "IdTipoDispositivoNavigation")
                        .WithMany("Dispositivos")
                        .HasForeignKey("IdTipoDispositivo")
                        .HasConstraintName("FK__Dispositi__IdTip__5165187F");

                    b.Navigation("IdEstadoDispositivoNavigation");

                    b.Navigation("IdMarcaNavigation");

                    b.Navigation("IdSistemaNavigation");

                    b.Navigation("IdTipoDispositivoNavigation");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Evento", b =>
                {
                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Dispositivo", "IdDispositivoNavigation")
                        .WithMany("Eventos")
                        .HasForeignKey("IdDispositivo")
                        .IsRequired()
                        .HasConstraintName("FK__Evento__IdDispos__70DDC3D8");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Impacto", "IdImpactoNavigation")
                        .WithMany("Eventos")
                        .HasForeignKey("IdImpacto")
                        .IsRequired()
                        .HasConstraintName("FK__Evento__IdImpact__71D1E811");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Sistema", "IdSistemaNavigation")
                        .WithMany("Eventos")
                        .HasForeignKey("IdSistema")
                        .IsRequired()
                        .HasConstraintName("FK__Evento__IdSistem__6FE99F9F");

                    b.Navigation("IdDispositivoNavigation");

                    b.Navigation("IdImpactoNavigation");

                    b.Navigation("IdSistemaNavigation");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Medicion", b =>
                {
                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.FechaMedicion", "IdFechaMedicionNavigation")
                        .WithMany("Medicions")
                        .HasForeignKey("IdFechaMedicion")
                        .IsRequired()
                        .HasConstraintName("FK__Medicion__IdFech__75A278F5");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Sensor", "IdSensorNavigation")
                        .WithMany("Medicions")
                        .HasForeignKey("IdSensor")
                        .HasConstraintName("FK__Medicion__IdSens__74AE54BC");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.TipoMUnidadM", "IdTipoMUnidadMNavigation")
                        .WithMany("Medicions")
                        .HasForeignKey("IdTipoMUnidadM")
                        .HasConstraintName("FK__Medicion__IdUnid__76969D2E");

                    b.Navigation("IdFechaMedicionNavigation");

                    b.Navigation("IdSensorNavigation");

                    b.Navigation("IdTipoMUnidadMNavigation");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Notificacion", b =>
                {
                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.TipoNotificacion", "IdTipoNotificacionNavigation")
                        .WithMany("Notificacions")
                        .HasForeignKey("IdTipoNotificacion")
                        .IsRequired()
                        .HasConstraintName("FK__Notificac__IdTip__693CA210");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Titulo", "IdTituloNavigation")
                        .WithMany("Notificacions")
                        .HasForeignKey("IdTitulo")
                        .IsRequired()
                        .HasConstraintName("FK__Notificac__IdTit__68487DD7");

                    b.Navigation("IdTipoNotificacionNavigation");

                    b.Navigation("IdTituloNavigation");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.PuntoOptimo", b =>
                {
                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Sensor", "IdSensorNavigation")
                        .WithMany("PuntoOptimos")
                        .HasForeignKey("IdSensor")
                        .HasConstraintName("FK__PuntoOpti__IdSen__619B8048");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.TipoMUnidadM", "IdTipoMUnidadMNavigation")
                        .WithMany("PuntoOptimos")
                        .HasForeignKey("IdTipoMUnidadM")
                        .IsRequired()
                        .HasConstraintName("FK__PuntoOpti__IdUni__628FA481");

                    b.Navigation("IdSensorNavigation");

                    b.Navigation("IdTipoMUnidadMNavigation");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Sensor", b =>
                {
                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Dispositivo", "IdDispositivoNavigation")
                        .WithMany("Sensors")
                        .HasForeignKey("IdDispositivo")
                        .HasConstraintName("FK__Sensor__IdDispos__5CD6CB2B");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.TipoMUnidadM", "IdTipoMUnidadMNavigation")
                        .WithMany("Sensors")
                        .HasForeignKey("IdTipoMUnidadM");

                    b.Navigation("IdDispositivoNavigation");

                    b.Navigation("IdTipoMUnidadMNavigation");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.TipoMUnidadM", b =>
                {
                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.TipoMedicion", "IdTipoMedicionNavigation")
                        .WithMany("TipoMUnidadMs")
                        .HasForeignKey("IdTipoMedicion")
                        .IsRequired()
                        .HasConstraintName("FK__TipoM_Uni__IdTip__02FC7413");

                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.UnidadMedidum", "IdUnidadMedidaNavigation")
                        .WithMany("TipoMUnidadMs")
                        .HasForeignKey("IdUnidadMedida")
                        .IsRequired()
                        .HasConstraintName("FK__TipoM_Uni__IdUni__02084FDA");

                    b.Navigation("IdTipoMedicionNavigation");

                    b.Navigation("IdUnidadMedidaNavigation");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Usuario", b =>
                {
                    b.HasOne("NuevaNaturalezaAPI.NET.Models.DB.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .IsRequired()
                        .HasConstraintName("FK__Usuario__IdRol__6D0D32F4");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.AccionAct", b =>
                {
                    b.Navigation("Actuadores");

                    b.Navigation("Auditoria");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Actuador", b =>
                {
                    b.Navigation("Auditoria");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Checklist", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Dispositivo", b =>
                {
                    b.Navigation("Actuadores");

                    b.Navigation("Auditoria");

                    b.Navigation("ChecklistDetalles");

                    b.Navigation("Eventos");

                    b.Navigation("Sensors");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.EstadoDispositivo", b =>
                {
                    b.Navigation("Dispositivos");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.FechaMedicion", b =>
                {
                    b.Navigation("Medicions");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Impacto", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Marca", b =>
                {
                    b.Navigation("Dispositivos");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Sensor", b =>
                {
                    b.Navigation("Medicions");

                    b.Navigation("PuntoOptimos");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Sistema", b =>
                {
                    b.Navigation("Dispositivos");

                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.TipoDispositivo", b =>
                {
                    b.Navigation("Dispositivos");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.TipoMUnidadM", b =>
                {
                    b.Navigation("Medicions");

                    b.Navigation("PuntoOptimos");

                    b.Navigation("Sensors");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.TipoMedicion", b =>
                {
                    b.Navigation("TipoMUnidadMs");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.TipoNotificacion", b =>
                {
                    b.Navigation("Notificacions");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Titulo", b =>
                {
                    b.Navigation("Notificacions");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.UnidadMedidum", b =>
                {
                    b.Navigation("TipoMUnidadMs");
                });

            modelBuilder.Entity("NuevaNaturalezaAPI.NET.Models.DB.Usuario", b =>
                {
                    b.Navigation("Auditoria");
                });
#pragma warning restore 612, 618
        }
    }
}
